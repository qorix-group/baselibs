# *******************************************************************************
# Copyright (c) 2025 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Apache License Version 2.0 which is available at
# https://www.apache.org/licenses/LICENSE-2.0
#
# SPDX-License-Identifier: Apache-2.0
# *******************************************************************************
module(name = "score-baselibs")

bazel_dep(name = "toolchains_llvm", version = "1.3.0", dev_dependency=True)

# Configure and register the toolchain.
bazel_dep(name = "score_toolchains_gcc", version = "0.4", dev_dependency=True)
gcc = use_extension("@score_toolchains_gcc//extentions:gcc.bzl", "gcc", dev_dependency=True)
gcc.toolchain(
    url = "https://github.com/eclipse-score/toolchains_gcc_packages/releases/download/0.0.1/x86_64-unknown-linux-gnu_gcc12.tar.gz",
    sha256 = "457f5f20f57528033cb840d708b507050d711ae93e009388847e113b11bf3600",
    strip_prefix = "x86_64-unknown-linux-gnu",
)
gcc.extra_features(
    features = [
        "minimal_warnings",
        "treat_warnings_as_errors",
    ],
)
gcc.warning_flags(
    minimal_warnings = ["-Wall", "-Wno-error=deprecated-declarations"],
    strict_warnings = ["-Wextra", "-Wpedantic"],
)
use_repo(gcc, "gcc_toolchain", "gcc_toolchain_gcc")

bazel_dep(name = "googletest", version = "1.15.0")
bazel_dep(name = "google_benchmark", version = "1.9.1")

bazel_dep(name = "rules_boost", repo_name = "com_github_nelhage_rules_boost")
archive_override(
    module_name = "rules_boost",
    urls = "https://github.com/nelhage/rules_boost/archive/refs/heads/master.tar.gz",
    strip_prefix = "rules_boost-master",
)

non_module_boost_repositories = use_extension("@com_github_nelhage_rules_boost//:boost/repositories.bzl", "non_module_dependencies")
use_repo(
    non_module_boost_repositories,
    "boost",
)

bazel_dep(name = "download_utils", version = "1.0.1")

deb = use_repo_rule("@download_utils//download/deb:defs.bzl", "download_deb")

deb(
    name = "acl-deb",
    build = "//third_party/acl:acl.BUILD",
    urls = ["https://archive.ubuntu.com/ubuntu/pool/main/a/acl/libacl1-dev_2.2.52-3build1_amd64.deb"],
    visibility = ["//visibility:public"],
)

deb(
    name = "valgrind-deb",
    build = "//third_party/valgrind:valgrind.BUILD",
    urls = ["https://archive.ubuntu.com/ubuntu/pool/main/v/valgrind/valgrind_3.15.0-1ubuntu9.1_amd64.deb"],
    visibility = ["//visibility:public"],
)

deb(
    name = "libcap2-deb",
    urls = ["https://archive.ubuntu.com/ubuntu/pool/main/libc/libcap2/libcap2_2.25-1.2_amd64.deb"],
    visibility = ["//visibility:public"],
)

deb(
    name = "libcap2-dev-deb",
    build = "//third_party/libcap2:libcap2.BUILD",
    urls = ["https://archive.ubuntu.com/ubuntu/pool/main/libc/libcap2/libcap-dev_2.25-1.2_amd64.deb"],
    visibility = ["//visibility:public"],
)

deb(
    name = "libseccomp2-deb",
    urls = ["https://archive.ubuntu.com/ubuntu/pool/main/libs/libseccomp/libseccomp2_2.5.1-1ubuntu1~18.04.2_amd64.deb"],
    visibility = ["//visibility:public"],
)

deb(
    name = "libseccomp2-dev-deb",
       build = "//third_party/libseccomp2:libseccomp2.BUILD",
    urls = ["https://archive.ubuntu.com/ubuntu/pool/main/libs/libseccomp/libseccomp-dev_2.5.1-1ubuntu1~18.04.2_i386.deb"],
    visibility = ["//visibility:public"],
)

bazel_dep(name = "nlohmann_json", version = "3.11.3")
bazel_dep(name = "bazel_skylib", version = "1.7.1")
bazel_dep(name = "platforms", version = "0.0.11")

# Rust rules for Bazel
bazel_dep(name = "rules_rust", version = "0.56.0")

# Module deps
rust = use_extension("@rules_rust//rust:extensions.bzl", "rust")
rust.toolchain(
    edition = "2021",
    versions = ["1.85.0"],
)

crate = use_extension("@rules_rust//crate_universe:extensions.bzl", "crate")
crate.from_cargo(
    name = "crates",
    cargo_lockfile = "//:Cargo.lock",
    manifests = [
        "//:Cargo.toml",
        "//score/mw/log:Cargo.toml",
    ],
)
use_repo(crate, "crates")
